// ------------------------------
// edX Pattern Library Site: Components

// About: styling for specific UI components ranging from global to modular.

// #CONTROLS
// #SYSTEM FEEDBACK
// #HEADER
// #NAVIGATION
// #SIDEBAR
// #MAIN CONTENT
// #FOOTER
// #PATTERNS
// #SPECIFIC PATTERNS
// #EXAMPLE - GRID
// #EXAMPLE - LAYOUTS


// ------------------------------
// #CONTROLS
// ------------------------------

// tab panels and examples
.example-set {
    @extend %clear-last-child;
    @include clearfix();
    padding-bottom: spacing-vertical(base);
    border-bottom: rem(2) solid palette(grayscale, x-light);
    margin-bottom: spacing-vertical(base);

    .button-overlay-demo {
        @include linear-gradient(50deg, palette(primary, light) 0%, palette(primary, base) 100%);
        padding: spacing-vertical(mid-large) spacing-horizontal(mid-large);
    }
}

// copyable patterns
.is-copyable {
    display: inline-block;
    white-space: nowrap;
    font-family: $font-family-monospace;
}

// ------------------------------
// #SYSTEM FEEDBACK
// ------------------------------
.badge {
    @include text-align(center);
    border-radius: rem(15);
    padding: spacing-vertical(xxx-small) spacing-horizontal(small);
    font-size: font-size(xxx-small);
    font-weight: font-weight(bold);
    text-transform: uppercase;
    white-space: nowrap;
    letter-spacing: letter-spacing(loose);

    .badge-abbreviation {
        border-bottom: none;
    }
}

// ------------------------------
// #HEADER
// ------------------------------
.pldoc-wrapper-header-site {
    background: palette(grayscale, back);
}


.pldoc-header-site {

}

// ------------------------------
// #NAVIGATION
// ------------------------------
// navigation - sidebar-based

%spaced-nav {
    @include padding-left(spacing-horizontal(small));
    @include padding-right(spacing-horizontal(small));
}

.pldoc-nav {

    padding-bottom: spacing-vertical(small);

    &:last-child {
        padding-bottom: 0;
    }

    .pldoc-link {

        // STATE: hover, active, and focus
        &:hover,
        &:active,
        &:focus {

        }

        // CASE: item is current
        &.is-current {

            .pldoc-link:before {
                display: inline-block;
            }
        }
    }

    // CASE: pattern listing
    .list-patterns {

        .pattern {
            @include clearfix();

            .pattern-title,
            .badge {
                display: inline-block;
            }

            .pattern-title {
                width: 80%;
            }

            .badge {
                @include float(right);
            }
        }
    }

    .pldoc-nav-title {
        @extend %spaced-nav;
        text-transform: uppercase;
        color: palette(primary, x-dark);
        font-size: font-size(small);
    }

    .item {
        @extend %spaced-nav;
        display: inline-block;

        @include susy-media($bp-screen-md) {
            display: block;
        }

        .pldoc-link {
            display: block;
            width: 100%;
        }
    }

    .is-current {
        background-color: palette(grayscale, x-trans);
    }

}

// internal site navigation
.pldoc-nav-internal {

}

// external site navigation
.pldoc-nav-external {

}

.pldoc-tab {

    &:focus {
        outline: none;
    }
}

.pldoc-tab-content {
    @extend %depth-2;
    @include transition(box-shadow timing(fast) ease-in-out);
    border: rem(1) solid palette(grayscale, base);
    padding: spacing-horizontal(base);
}

.pldoc-settings {
    background: palette(grayscale, xx-light);
    margin-bottom: spacing-vertical(large);
    padding: spacing-vertical(small) spacing-horizontal(small);
}

.pldoc-setting {
    display: inline-block;
    vertical-align: middle;
    @include margin-right(spacing-horizontal(small));

    &:last-child {
         @include margin-right(0);
    }
}

// ------------------------------
// #SIDEBAR
// ------------------------------
.pldoc-wrapper-content-supplemental {

}

// ------------------------------
// #MAIN CONTENT
// ------------------------------
.pldoc-wrapper-content-main {

}

// ------------------------------
// #FOOTER
// ------------------------------
.pldoc-footer-site {
    @extend %grid-container;

    padding-top: spacing-horizontal(small);
}

.pldoc-footer-site-copyright {

    .pldoc-copy {
        font-size: font-size(small);
        margin: 0;
    }
}

// ------------------------------
// #PATTERNS
// ------------------------------
.pldoc-pattern {

    .example-set-hd {
        margin-bottom: spacing-vertical(small);
    }
}

.pldoc-pattern-header {
    margin-bottom: spacing-vertical(small);
}


// pattern info tabs
.pldoc-tab-labels {
    @include clearfix();
    @extend %reset-lists;
    border-bottom: $pldoc-tab-label-height solid palette(grayscale, base);
}

.pldoc-tab-heading {
    @extend %a11y-hide;
}

.pldoc-tab-label {
    @include float(left);
    position: relative;
    bottom: -(spacing-vertical(xx-small));
    margin-bottom: 0;

    .pldoc-link {
        display: block;
        margin: 0;
        border-width: 0 0 $pldoc-tab-label-height 0;
        border-color: $transparent;
        border-style: solid;
        background: $transparent;
        padding: spacing-vertical(x-small) spacing-horizontal(mid-small);
        font-weight: font-weight(semi-bold);
        color: palette(grayscale, dark);

        &:hover,
        &:focus {
            border-bottom-color: palette(primary, light);
            color: palette(primary, light);
        }

        &.is-active {
            border-bottom-color: palette(grayscale, x-dark);
            color: palette(grayscale, x-dark);
        }
    }
}

// markup section of pattern
.pldoc-pattern-markup {

    code {
        font-family: $font-family-monospace;
    }
}


// ------------------------------
// #SPECIFIC PATTERNS
// ------------------------------
// color swatches
.pldoc-pattern-colors {

    .pldoc-tab-content {
        position: relative;

        .info-pane {
            position: fixed;
            left: 37.5%;
            width: 640px;
            height: 400px;
            background: $white;
            box-shadow: 0 0 5px $shadow;
            z-index: z-index(mid-front);

            .info-pane-header {
                padding: spacing-vertical(small);
                background: palette(grayscale, back);

                .close-button {
                    @include float(right);
                    border: 0;
                    background: transparent;
                    color: palette(primary, base);
                }

                .color-info-title {
                    margin-bottom: 0;
                    font-weight: font-weight(bold);
                }

                .color-description {
                    margin-bottom: 0;
                }
            }

            .color-info-content {
                padding: spacing-vertical(small);
                background: $white;
                
                .color-usage {
                    
                    .list-background,
                    .list-foreground {
                        @include padding-right(5%);
                        display: inline-block;
                        width: 49%;
                        vertical-align: top;
                    }
                }
                
                .color-technics {
                    margin-top: spacing-vertical(small);
                    
                    dl {
                        margin-bottom: 0;
                        
                        dt {
                            display: inline-block;
                            width: 19%;
                            margin-top: 0;
                            vertical-align: top;
                        }
                        
                        dd {
                            display: inline-block;
                            width: 79%;
                            vertical-align: top;
                        }
                    }
                }
            }
        }
    }
    
    .example-set {
        
        .row {
            padding: spacing-vertical(x-small) 0;
            
            &.on-white {
                background: $white;
                color: palette(grayscale, x-dark);
            }
            
            &.on-gray {
                background: palette(grayscale, back);
                color: palette(grayscale, x-dark);
            }
            
            &.on-dark-primary {
                background: palette(primary, x-dark);
                color: palette(primary, x-light);
            }
            
            &.on-dark-secondary {
                background: palette(secondary, x-dark);
                color: palette(secondary, x-light);
            }
            
            &.on-dark-grayscale {
                background: palette(grayscale, x-dark);
                color: $white;
            }
            
            &.on-dark-success {
                background: palette(success, text);
                color: palette(success, back);
            }
            
            &.on-dark-error {
                background: palette(error, text);
                color: palette(error, back);
            }
            
            &.on-dark-warning {
                background: palette(warning, text);
                color: palette(warning, back);
            }
            
            &.on-dark-information {
                background: palette(information, text);
                color: palette(information, back);
            }
        }
    
        .swatch {
            @include transition(all timing(x-fast) ease-in-out);
            @include span(12 of 12);
            position: relative;
            border: 0;
            padding: spacing-vertical(base) spacing-horizontal(x-small);
            
            &.color-description {
                padding: spacing-vertical(small) 0 0 0;
                font-size: font-size(small);
            }
            
            &.primary {
                background: palette(primary, base);
                color: palette(primary, x-light);
                
                &.x-dark {
                    background: palette(primary, x-dark);
                    color: palette(primary, x-light);
                }
                
                &.dark {
                    background: palette(primary, dark);
                    color: palette(primary, x-light);
                }
                
                &.base {
                    background: palette(primary, base);
                    color: palette(primary, x-light);
                }
                
                &.light {
                    background: palette(primary, light);
                    color: palette(primary, x-dark);
                }
                
                &.x-light {
                    background: palette(primary, x-light);
                    color: palette(primary, x-dark);
                }
            }
            
            &.secondary {
                background: palette(secondary, base);
                color: palette(secondary, x-light);
                
                &.x-dark {
                    background: palette(secondary, x-dark);
                    color: palette(secondary, x-light);
                }
                
                &.dark {
                    background: palette(secondary, dark);
                    color: palette(secondary, x-light);
                }
                
                &.base {
                    background: palette(secondary, base);
                    color: palette(secondary, x-light);
                }
                
                &.light {
                    background: palette(secondary, light);
                    color: palette(secondary, x-dark);
                }
                
                &.x-light {
                    background: palette(secondary, x-light);
                    color: palette(secondary, x-dark);
                }
            }
            
            &.grayscale {
                background: palette(grayscale, base);
                color: palette(grayscale, x-dark);
                
                &.x-dark {
                    background: palette(grayscale, x-dark);
                    color: palette(grayscale, x-light);
                }
                
                &.dark {
                    background: palette(grayscale, dark);
                    color: palette(grayscale, x-light);
                }
                
                &.base {
                    background: palette(grayscale, base);
                    color: palette(grayscale, x-light);
                }
                
                &.back {
                    background: palette(grayscale, back);
                    color: palette(grayscale, x-light);
                }
                
                &.trans {
                    background: palette(grayscale, trans);
                    color: palette(grayscale, x-dark);
                }
            }
            
            &.success {
                background: palette(success, text);
                color: $white;
                
                &.text {
                    background: palette(success, text);
                    color: $white;
                }
                
                &.accent {
                    background: palette(success, accent);
                    color: $white;
                }
                
                &.back {
                    background: palette(success, back);
                    color: palette(success, text);
                }
            }
            
            &.error {
                background: palette(error, text);
                color: $white;
                
                &.text {
                    background: palette(error, text);
                    color: $white;
                }
                
                &.accent {
                    background: palette(error, accent);
                    color: $white;
                }
                
                &.back {
                    background: palette(error, back);
                    color: palette(error, text);
                }
            }
            
            &.warning {
                background: palette(warning, text);
                color: $white;
                
                &.text {
                    background: palette(warning, text);
                    color: $white;
                }
                
                &.accent {
                    background: palette(warning, accent);
                    color: $white;
                }
                
                &.back {
                    background: palette(warning, back);
                    color: palette(warning, text);
                }
            }
            
            &.fail-a11y-color {
                
                &:before {
                    content: " ";
                    display: block;
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 0;
                    height: 0;
                    border-style: solid;
                    border-width: 24px 24px 0 0;
                    border-color: palette(warning, accent) transparent transparent transparent;
                }
                /*border-left: rem($baseline/4) solid palette(warning, accent);
                box-shadow: inset 1px 0 0px $white;*/
            }
            
            .color-meta {
                opacity: 0;
            }

            // color info
            .color-info {
                display: block;
                text-align: center;
            }

            // color name/class
            .color-class {
                display: block;
                font-size: font-size(small);
                font-weight: font-weight(semi-bold);
                text-transform: lowercase;
                text-align: center;
            }

            // color reference and meta
            .color-reference,
            .color-meta {
                display: block;
                font-size: font-size(x-small);
                text-align: center;
            }

            // color metadata
            .color-meta {

                .color-rgb {
                    @include ellipsis();
                }

                .color-hex {
                    text-transform: uppercase;
                }
            }
        }
    }
}

// buttons
.pldoc-pattern-buttons {

    .btn {
        display: inline-block;
        vertical-align: middle;
        margin-right: spacing-horizontal(x-small);
        margin-bottom: spacing-vertical(x-small);

        // CASE: last button in set
        &:last-child {
            margin-right: 0;
        }
    }

    .btn-group {
        margin-bottom: spacing-vertical(mid-small);

        .btn {
            margin: 0;
        }
    }
}

// icons
.pldoc-pattern-icons {

    .example-icon {
        @include text-align(center);
        display: inline-block;
        width: spacing-vertical(x-large);
        margin: 0 spacing-horizontal(mid-small) spacing-vertical(mid-small) 0;

        .icon-display {
            width: 100%;
            margin: 0 auto spacing-vertical(x-small) auto;

            .icon {
                font-size: rem(48); // Initial setting to match slider
                color: palette(primary, base);
            }
        }

        .icon-classname,
        .use-description {
            font-size: font-size(small);
            color: palette(grayscale, dark);
        }

        @include susy-breakpoint($bp-screen-md, $susy-default) {
            @include gallery(3 of 12);
        }
    }
}

// ui depth
.pldoc-pattern-depth {

    // padding for demo purposes
    .depth {
        padding: spacing-vertical(small) spacing-horizontal(base);
    }

    // light text on darker backgrounds for demo purposes
    .depth--2,
    .depth--3 {

        .hd {
            color: palette(grayscale, base);
        }

        .copy {
            color: palette(grayscale, base);
        }
    }

    // spacing for demo purposes
    .slat,
    .card {
        margin-bottom: spacing-vertical(x-small);

        &:last-child {
            margin-bottom: 0;
        }
    }

    .zebra-stripe {
        @extend %reset-lists;

        .slat {
            margin-bottom: 0;
        }
    }
}


// ------------------------------
// #EXAMPLE - GRID
// ------------------------------
%demo-grid-column {
    background: $grid-debug-color;
    border: 1px solid saturate($grid-debug-color, 100%);
    // border-right: 2px solid saturate($grid-debug-color, 100%);


    @include susy-breakpoint($bp-screen-md, $susy-default) {
        background: saturate($grid-debug-color, 33%);
    }

    @include susy-breakpoint($bp-screen-lg, $susy-default) {
        background: saturate($grid-debug-color, 66%);
    }

    @include susy-breakpoint($bp-screen-xl, $susy-default) {
        background: saturate($grid-debug-color, 100%);
    }

    .example-label {
        @extend %copy-micro;
        display: block;
        color: palette(grayscale, black-t);
    }
}

%demo-grid-row {
    background: $grid-debug-color;
}

// post
.pldoc-pattern-grid {

    .col,
    .gallery-item {
        @include text-align(center);
        @extend %demo-grid-column;
        padding: spacing-vertical(small) spacing-horizontal(small);
    }

    .row {
        margin-bottom: spacing-vertical(mid-small);

        &:last-child {
            margin-bottom: 0;
        }
    }

    .example-grid {

        .example-label {
            @extend %copy-micro;
            display: block;
        }

        .example-label-container {
            @include full();
            margin-bottom: spacing-vertical(x-small);
        }
    }

    // basic example
    .example-grid-basic {

        .col {
            @include span(1);

            // mark every 12th col as last
            &:nth-child(12n+12) {
                @include omega();
            }
        }
    }

    // semantic shift example
    .example-grid-shifts {

        // shifts - before col
        .shifts-pre {

            .col-A {
                @include span(11);
                @include pre(1);
            }

            .col-B {
                @include span(10);
                @include pre(2);
            }

            .col-C {
                @include span(9);
                @include pre(3);
            }

            .col-D {
                @include span(8);
                @include pre(4);
            }

            .col-E {
                @include span(7);
                @include pre(5);
            }

            .col-F {
                @include span(6);
                @include pre(6);
            }

            .col-G {
                @include span(5);
                @include pre(7);
            }

            .col-H {
                @include span(4);
                @include pre(8);
            }

            .col-I {
                @include span(3);
                @include pre(9);
            }

            .col-J {
                @include span(2);
                @include pre(10);
            }

            .col-K {
                @include span(1);
                @include pre(11);
            }
        }

        // shifts - after col
        .shifts-post {

            .col-A {
                @include span(11);
                @include post(1);
            }

            .col-B {
                @include span(10);
                @include post(2);
            }

            .col-C {
                @include span(9);
                @include post(3);
            }

            .col-D {
                @include span(8);
                @include post(4);
            }

            .col-E {
                @include span(7);
                @include post(5);
            }

            .col-F {
                @include span(6);
                @include post(6);
            }

            .col-G {
                @include span(5);
                @include post(7);
            }

            .col-H {
                @include span(4);
                @include post(8);
            }

            .col-I {
                @include span(3);
                @include post(9);
            }

            .col-J {
                @include span(2);
                @include post(10);
            }

            .col-K {
                @include span(1);
                @include post(11);
            }
        }

        section {
            @include clearfix();
            margin-bottom: spacing-vertical(mid-small);

            &:last-child {
                margin-bottom: 0;
            }
        }
    }


    // semantic example
    .example-grid-semantic {

        .wrapper-content {
            @include container();
        }

        .content-main {
            @include span(8 of 12 first);
            @extend %demo-grid-column;
        }

        .story {
            @extend %demo-grid-column;
            margin-bottom: spacing-vertical(small);

            &:last-child {
                margin-bottom: 0;
            }
        }

        .story-main {
            @include break();
        }

        .story-secondary {
            @include span(4 of 8);
            @extend %demo-grid-column;

            &:nth-child(2n+1) {
                @include omega();
            }
        }

        .content-secondary {
            @include span(4 of 12 last);
            @extend %demo-grid-column;
        }

        .list-related {
            @extend %reset-lists;
        }
    }

    // semantic gallery example
    .example-grid-gallery-semantic {

        .photo-gallery {
            @include clearfix();
            margin-bottom: spacing-vertical(base);

            &:last-child {
                margin-bottom: 0;
            }

            .photo {
                @include gallery(4);
                @extend %demo-grid-column;
                margin-bottom: gutter(12);
            }

            .photo-source {
                display: block;
                width: 100%;
                margin-bottom: spacing-vertical(x-small);
            }

            .photo-caption {

            }
        }

        .photo-gallery-large {

            .photo {
                @include gallery(6);
            }
        }
    }

    // manual (+ responsive) gallery example
    .example-grid-gallery-classes,
    .example-grid-gallery-responsive {

        .gallery {
            margin-bottom: spacing-vertical(mid-small);

            &:last-child {
                margin-bottom: 0;
            }
        }

        .gallery-item {
            margin-bottom: spacing-vertical(small);

            &:last-child {
                margin-bottom: 0;
            }
        }
    }
}


// ------------------------------
// #EXAMPLE - LAYOUTS
// ------------------------------
%demo-layout-column {
    background: $grid-debug-color;
    border: 1px solid saturate($grid-debug-color, 100%);

    @include susy-breakpoint($bp-screen-md, $susy-default) {
        background: saturate($grid-debug-color, 33%);
    }

    @include susy-breakpoint($bp-screen-lg, $susy-default) {
        background: saturate($grid-debug-color, 66%);
    }

    @include susy-breakpoint($bp-screen-xl, $susy-default) {
        background: saturate($grid-debug-color, 100%);
    }
}

.example-layout {

    .layout-col,
    .layout-view-col
     {
       @extend %demo-layout-column;
       padding: spacing-vertical(small) spacing-horizontal(small);
    }

    .example-label {
        @extend %copy-micro;
        display: block;
        color: palette(grayscale, black-t);
    }
}
